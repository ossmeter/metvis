/*! metvis 2014-11-24 */
var metvis={version:"0.0.1"};!function(){"use strict";metvis.Annotation=function(a,b,c){this.axis=a,this.intersect=b,this.label=c},metvis.Table=function(a,b){return self=this,self.container=a,self.vis=b,this.draw=function(){if("Table"!=self.vis.type)return void console.log("Invalid visualisation type. Should be 'Table'. For non-tabular data use metvis.Chart.draw().");$(self.container).append("<table></table>");var a=$(self.container).children(),b="<thead>";$.each(self.vis.datatable[0],function(a){b=b+"<th>"+a+"</th>"}),b+="</thead>",a.append(b);var c="<tbody>";$.each(self.vis.datatable,function(a,b){c+="<tr>",$.each(b,function(a,b){c=c+"<td>"+b+"</td>"}),c+="</tr>"}),c+="</tbody>",a.append(c)},this},metvis.Chart=function(a,b){return self=this,self.container=a,self.vis=b,self.vises=[b],self.series=[],self.maximumVisualisations=3,self.axes=[],self.xScale=null,self.yScale=null,self.legend={},self.margin={top:30,right:20,bottom:30,left:50},self.dateFormat="%Y%m%d",self.colors=d3.scale.category20(),self._g,self.svg,self.annotations=[],self._drawn=!1,self.width=$(a).width(),self.height=$(a).height(),this.draw=function(){if(self._drawn)return void console.err("draw() invoked multiple times. Only call once, then use redraw()");self._drawn=!0,self.width=$(self.container).width()-self.margin.left-self.margin.right,self.height=self.height-self.margin.top-self.margin.bottom,self._formatData(self.vis),self._updateScales();var a=self._createAxis(self.xScale,"bottom",10),b=self._createAxis(self.yScale,"left",5);self.vis.timeSeries,self.axes.push(a),self.axes.push(b);var c=self._extractSeries(self.vis);for(var d in c)self.series.push(c[d]);self._draw()},self._draw=function(){self.svg=d3.select(a).append("svg").attr("width",self.width+self.margin.left+self.margin.right).attr("height",self.height+self.margin.top+self.margin.bottom).append("g").attr("transform","translate("+self.margin.left+","+self.margin.top+")"),self._drawGridlines(self.xScale,self.yScale);for(var b in self.series)self._drawSeries(self.series[b],self.colors(b));var c=self._createAxis(self.xScale,"bottom",10),d=self._createAxis(self.yScale,"left",5);self.vis.timeSeries&&c.tickFormat(self.dateAxisFormat),self.svg.append("g").attr("class","x axis").attr("transform","translate(0,"+self.height+")").call(c),self.svg.append("g").attr("class","y axis").call(d),self.svg.append("g").attr("id","ossplots-annotations").attr("class","threshold-line"),d3.select("#ossplots-annotations").selectAll("line").data(self.annotations).enter().append("line").attr("x1",function(a){return"X"==a.axis?self.xScale(d3.time.format(self.dateFormat).parse(a.intersect)):self.axes[0].scale().range()[0]}).attr("x2",function(a){return"X"==a.axis?self.xScale(d3.time.format(self.dateFormat).parse(a.intersect)):self.axes[0].scale().range()[1]}).attr("y1",function(a){return"X"==a.axis?self.axes[1].scale().range()[0]:self.yScale(a.intersect)}).attr("y2",function(a){return"X"==a.axis?self.axes[1].scale().range()[1]:self.yScale(a.intersect)})},self._createAxis=function(a,b,c){return d3.svg.axis().scale(a).orient(b).ticks(c)},self.addAnnotation=function(a){if("undefined"==typeof a.axis||"undefined"==typeof a.intersect||"undefined"==typeof a.label)throw"Invalid annotation";self.annotations.push(a),$(self.container).empty(),self._draw()},self._drawSeries=function(a,b){"Table"===a.vis.type?console.err("Attempted to draw a 'Table' series. Use metvis.Table.draw() for tabular data."):"LineChart"===a.vis.type?self.svg.append("g").append("path").attr("class","line").attr("d",a.line(a.vis.datatable)).style("stroke-width",2).style("stroke",b):"BarChart"===a.vis.type&&self.svg.selectAll("rect").data(a.vis.datatable).enter().append("rect").attr("x",function(b){return self.xScale(b[a.vis.x])}).attr("y",function(b){return self.yScale(b[a.vis.y]<0?0:b[a.vis.y])}).attr("width",function(){return a.vis.categorical?self.xScale.rangeBand():self.width/a.vis.datatable.length-1}).attr("height",function(b){return b[a.vis.y]<0?Math.abs(self.yScale(0)-self.yScale(b[a.vis.y])):self.height-self.yScale(b[a.vis.y])}).attr("fill",function(c){return c[a.vis.y]<0?"red":b}).attr("opacity",.7).attr("title",function(b){return b[a.vis.x]})},self._updateScales=function(){for(var a in self.vises)if(self.vises[a].timeSeries&&self.vises[a].categorical)throw"Data cannot be both categorical and time series.";var b=[];for(var a in self.vises){var c=self.vises[a];c.datatable.forEach(function(a){b.push(a[c.x])})}self.vis.timeSeries?(self.xScale=d3.time.scale().range([0,self.width]),self.xScale.domain(d3.extent(b))):self.vis.categorical?(self.xScale=d3.scale.ordinal().rangeRoundBands([0,self.width],.1),self.xScale.domain(b)):(self.xScale=d3.scale.linear().range([0,self.width]),self.xScale.domain(d3.extent(b)));var d=[];for(var a in self.vises){var c=self.vises[a];c.datatable.forEach("string"==typeof c.y?function(a){d.push(a[c.y])}:function(a){for(var b in c.y)d.push(a[c.y[b]])})}self.yScale=d3.scale.linear().range([self.height,0]),self.vis.timeSeries?self.yScale.domain(d3.extent(d)).nice():self.vis.categorical?self.yScale.domain([Math.min(0,d3.min(d)),d3.max(d)]):self.yScale.domain(d3.extent(d)).nice()},self._extractSeries=function(a){if("string"==typeof a.y){if(a.series){var b={};a.datatable.forEach(function(c){var d=c[a.series];if(!b[d]){b[d]=[];var e={};for(var f in a)"datatable"!=f&&(e[f]=a[f]);e.parentVis=a,e.datatable=[],b[d]=e}b[d].datatable.push(c)});var c=[];for(var d in b){var e=b[d],f=function(a){return d3.svg.line().x(function(b){return self.xScale(b[a.x])}).y(function(b){return self.yScale(b[a.y])})}(e,i),g={line:f,vis:e,name:d};c.push(g)}return c}var f=function(a){return d3.svg.line().x(function(b){return self.xScale(b[a.x])}).y(function(b){return self.yScale(b[a.y])})}(a,i),c={line:f,vis:a,name:a.y};return[c]}var h=[];for(var i in a.y){var f=function(a,b){return d3.svg.line().x(function(b){return self.xScale(b[a.x])}).y(function(c){return self.yScale(c[a.y[b]])})}(a,i),c={line:f,vis:a,name:a.y[i]};h.push(c)}return h},self.addVis=function(a){if(self.vis.timeSeries!=a.timeSeries||self.vis.categorical!=a.categorical)throw"Incompatible data types, cannot overlay data.";if($(self.container).empty(),-1===self.vises.indexOf(a)){self.vises.push(a),self._formatData(a),self._updateScales();var b=self._extractSeries(a);for(var c in b)self.series.push(b[c]),self._drawSeries(b[c],"red")}self._draw()},self.removeVis=function(b){$(a).empty();var c=self.vises.indexOf(b);if(-1!=c){self.vises.splice(c,1),self._updateScales();var d=[];for(var e in self.series)(self.series[e].vis===b||self.series[e].vis.parentVis===b)&&d.push(self.series[e]);if(0!=d.length)for(var f in d){var c=self.series.indexOf(d[f]);self.series.splice(c,1)}}self._draw()},self._formatData=function(a){var b=d3.time.format(self.dateFormat).parse;a.datatable.forEach(function(c){if(a.timeSeries===!0&&"string"==typeof c[a.x]?c[a.x]=b(c[a.x]):!a.categorical==!0&&(c[a.x]=+c[a.x]),"string"==typeof a.y)c[a.y]=+c[a.y];else for(var d in a.y)c[a.y[d]]=+c[a.y[d]]})},self._drawGridlines=function(a,b){self.svg.selectAll("line.y").data(b.ticks(5)).enter().append("line").attr("class","y grid").attr("x1",0).attr("x2",self.width).attr("y1",b).attr("y2",b)},this}}();